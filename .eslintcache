[{"/home/ashish/Web Development/mernstack/covid/src/index.js":"1","/home/ashish/Web Development/mernstack/covid/src/App.js":"2","/home/ashish/Web Development/mernstack/covid/src/reportWebVitals.js":"3","/home/ashish/Web Development/mernstack/covid/src/components/InfoBox.js":"4","/home/ashish/Web Development/mernstack/covid/src/components/Map.js":"5","/home/ashish/Web Development/mernstack/covid/src/components/CountriesTable.js":"6","/home/ashish/Web Development/mernstack/covid/src/components/Graph.js":"7","/home/ashish/Web Development/mernstack/covid/src/components/LocationMarker.js":"8","/home/ashish/Web Development/mernstack/covid/src/components/MapCountryChange.js":"9","/home/ashish/Web Development/mernstack/covid/src/components/DrawCircleOnMap.js":"10","/home/ashish/Web Development/mernstack/covid/src/components/util.js":"11","/home/ashish/Web Development/mernstack/covid/src/components/LineGraph.js":"12"},{"size":500,"mtime":1606991421348,"results":"13","hashOfConfig":"14"},{"size":7080,"mtime":1608657412225,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606991421348,"results":"16","hashOfConfig":"14"},{"size":1712,"mtime":1608563958530,"results":"17","hashOfConfig":"14"},{"size":1168,"mtime":1608562080184,"results":"18","hashOfConfig":"14"},{"size":2604,"mtime":1608476169271,"results":"19","hashOfConfig":"14"},{"size":3798,"mtime":1608525484638,"results":"20","hashOfConfig":"14"},{"size":503,"mtime":1608487980835,"results":"21","hashOfConfig":"14"},{"size":242,"mtime":1608528723100,"results":"22","hashOfConfig":"14"},{"size":1283,"mtime":1608648158883,"results":"23","hashOfConfig":"14"},{"size":3988,"mtime":1608549953245,"results":"24","hashOfConfig":"14"},{"size":4585,"mtime":1608655109431,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1pvxe8t",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/ashish/Web Development/mernstack/covid/src/index.js",[],["53","54"],"/home/ashish/Web Development/mernstack/covid/src/App.js",[],"/home/ashish/Web Development/mernstack/covid/src/reportWebVitals.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/InfoBox.js",["55","56"],"import { Card, CardContent, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./InfoBox.css\";\n\nfunction InfoBox(props) {\n    const { title, newcases, total, isRed, active } = props;\n\n    // return (\n    //     <Card>\n    //         <CardContent\n    //             className={`infoBox ${active && \"InfoBox__selected\"} ${\n    //                 !isRed && \"InfoBox__selected__Green\"\n    //             }`}\n    //         >\n    //             <Typography color=\"textSecondary\">{title}</Typography>\n    //             <h2\n    //                 className={`InfoBox__NewCases ${\n    //                     !isRed && \"InfoBox__NewCases__Green\"\n    //                 } `}\n    //             >\n    //                 {\" \"}\n    //                 {`+ ${newcases}`}{\" \"}\n    //             </h2>\n    //             <Typography color=\"textSecondary\">Total : {total}</Typography>\n    //         </CardContent>\n    //     </Card>\n    // );\n    return (\n        <Card\n            onClick={props.onClick}\n            className={`infoBox && ${\n                title === \"Recovered\"\n                    ? \"infoBox__recovered\"\n                    : title === \"Deaths\"\n                    ? \"infoBox__deaths\"\n                    : \"\"\n            }`}\n        >\n            <CardContent>\n                <Typography className=\"infoBox__title\" color=\"textSecondary\">\n                    {title}\n                </Typography>\n                <h1 className=\"infoBox__cases\">+{newcases}</h1>\n                <Typography className=\"infoBox__total\" color=\"textSecondary\">\n                    Total : {total}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default InfoBox;\n","/home/ashish/Web Development/mernstack/covid/src/components/Map.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/CountriesTable.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/Graph.js",["57","58"],"import React, { useState, useEffect } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport numeral from 'numeral'\n\n\n\nconst getData = (data, type) => {\n    const labels = [];\n    const labelsdata = [];\n    let lastvalue;\n    for(let date in data[type]){\n        if(!lastvalue){\n            lastvalue = data[type][date];\n        } else{\n            labels.push(date);\n            labelsdata.push(data[type][date] - lastvalue);\n            lastvalue = data[type][date];\n        }\n    }\n    return [labels, labelsdata];\n}\n\n\n\nfunction Graph({country, type}) {\n    const [labels, setLabels] = useState([]);\n    const [labelsdata, setLabelsData] = useState([]);\n    const [countrydata, setCountryData] = useState({});\n    const [colour, setColour] = useState('');\n    useEffect(() => {\n        const fetchData = async () =>{\n            if(country === 'world'){\n                const worldurl = `https://disease.sh/v3/covid-19/historical/all?lastdays=120`;\n                fetch(worldurl)\n                .then(response => response.json())\n                .then(data => {\n                    setCountryData(data);\n                    const [labels, labelsdata] = getData(data, type);\n                    setLabels(labels);\n                    setLabelsData(labelsdata);\n                })\n            } else{\n                const url = `https://disease.sh/v3/covid-19/historical/${country}?lastdays=120`;\n                fetch(url)\n                .then(response => response.json())\n                .then(data => {\n                    setCountryData(data.timeline);\n                    const [labels, labelsdata] = getData(data.timeline, type);\n                    setLabels(labels);\n                    setLabelsData(labelsdata);\n                });\n            }\n        }\n        fetchData();\n    }, [country]);\n\n    useEffect(() =>{\n        switch(type){\n            case 'cases':\n                setColour('red');\n                break;\n            case 'deaths':\n                setColour('#c02739');\n                break;\n            case 'recovered':\n                setColour('green');\n                break;\n            default:\n                setColour('red');\n        }\n        const [labels, labelsdata] = getData(countrydata, type);\n        setLabels(labels);\n        setLabelsData(labelsdata);setLabels(labels);\n    }, [type]);\n\n    const data = {\n        labels : labels,\n        datasets : [\n            {  \n                label : `New ${type}`,\n                backgroundColor: colour,\n                // borderColor: '#CC1034',\n                borderWidth: 1.5,\n                data : labelsdata\n            }\n        ]\n    }\n    const options = {\n        legend: {\n        //   display: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        maintainAspectRatio: true,\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          callbacks: {\n            label: function (tooltipItem, data) {\n              return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              type: \"time\",\n              time: {\n                format: \"MM/DD/YY\",\n                tooltipFormat: \"ll\",\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: false,\n              },\n              ticks: {\n                min: 0,\n                callback: function (value, index, values) {\n                  return numeral(value).format(\"0a\");\n                },\n              },\n            },\n          ],\n        },\n      };\n    \n    return (\n        <div>\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default Graph\n","/home/ashish/Web Development/mernstack/covid/src/components/LocationMarker.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/MapCountryChange.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/DrawCircleOnMap.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/util.js",[],"/home/ashish/Web Development/mernstack/covid/src/components/LineGraph.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":37,"nodeType":"65","messageId":"66","endLine":6,"endColumn":42},{"ruleId":"63","severity":1,"message":"67","line":6,"column":44,"nodeType":"65","messageId":"66","endLine":6,"endColumn":50},{"ruleId":"68","severity":1,"message":"69","line":55,"column":8,"nodeType":"70","endLine":55,"endColumn":17,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":74,"column":8,"nodeType":"70","endLine":74,"endColumn":14,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'isRed' is assigned a value but never used.","Identifier","unusedVar","'active' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'countrydata'. Either include it or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [country, type]",{"range":"82","text":"83"},"Update the dependencies array to be: [countrydata, type]",{"range":"84","text":"85"},[1803,1812],"[country, type]",[2336,2342],"[countrydata, type]"]